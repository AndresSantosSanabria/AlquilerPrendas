/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package humanizar.alquilerprendas.view;

import humanizar.alquilerprendas.controller.EmpleadosController;
import humanizar.alquilerprendas.controller.LoginController;
import humanizar.alquilerprendas.dto.AlquilerDTO;
import humanizar.alquilerprendas.facade.AlquilerServiceFacade;
import humanizar.alquilerprendas.facade.UsuarioFacade;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;

/**
 *
 * @author Andres Santos
 */
@NoArgsConstructor
@AllArgsConstructor
public class Alquiler extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public int id;

    public Alquiler(List<String[]> prendasSeleccionadas, int id) {

        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.id = id;
        // Nombres de columnas incluyendo el checkbox al inicio
        String[] columnNames = {"Seleccionar", "Codigo", "Descripcion", "Talla", "Color", "Precio"};

        // Modelo con tipo de datos personalizados
        DefaultTableModel model = new DefaultTableModel(null, columnNames) {
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                if (columnIndex == 0) {
                    return Boolean.class; // La primera columna ser치 un checkbox
                }
                return String.class;
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 0; // Solo se puede editar (clickear) el checkbox
            }
        };

        // Agregar filas: insertamos 'true' como primer valor de cada fila
        for (String[] prenda : prendasSeleccionadas) {
            Object[] row = new Object[6]; // Total 6 columnas
            row[0] = true; // Checkbox activado
            System.arraycopy(prenda, 0, row, 1, prenda.length);
            model.addRow(row);
        }

        jtPrendas.setModel(model);

        // Ajustar el ancho de la columna de Descripci칩n
        jtPrendas.getColumnModel().getColumn(2).setPreferredWidth(500);

        String[] tabla1columnNames = {"Seleccionar", "Nombre", "C칩digo", "Cargo"};

        DefaultTableModel model1 = new DefaultTableModel(tabla1columnNames, 0) {
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                if (columnIndex == 0) {
                    return Boolean.class; // La columna 0 ser치 de tipo checkbox
                }
                return String.class;
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 0; // Solo el checkbox es editable
            }
        };

        EmpleadosController em = new EmpleadosController();
        List<Object[]> datos = em.obtenerNombreYCargo();

        for (Object[] fila : datos) {
            Object[] nuevaFila = new Object[fila.length + 1];
            nuevaFila[0] = false; // Checkbox no marcado por defecto
            System.arraycopy(fila, 0, nuevaFila, 1, fila.length); // Copiar el resto de los datos
            model1.addRow(nuevaFila);
        }

// Asignar el modelo a la tabla
        jtEmpleados.setModel(model1);

// Agregar listener para permitir solo un checkbox seleccionado
        model1.addTableModelListener(e -> {
            if (e.getColumn() == 0) {
                int selectedRow = e.getFirstRow();
                if ((Boolean) model1.getValueAt(selectedRow, 0)) {
                    for (int i = 0; i < model1.getRowCount(); i++) {
                        if (i != selectedRow && (Boolean) model1.getValueAt(i, 0)) {
                            model1.setValueAt(false, i, 0);
                        }
                    }
                }
            }
        });
        jtEmpleados.getColumnModel().getColumn(0).setPreferredWidth(50);
    }

    LoginController login = new LoginController();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        Alquilar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtPrendas = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtEmpleados = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        FechaDevolucion = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        FechaAlquiler = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(650, 350));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setMaximumSize(new java.awt.Dimension(1500, 580));
        jPanel3.setMinimumSize(new java.awt.Dimension(1500, 580));
        jPanel3.setPreferredSize(new java.awt.Dimension(1500, 580));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel6.setBackground(new java.awt.Color(102, 102, 102));
        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("REGRESAR");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 100, 40));

        jPanel7.setBackground(new java.awt.Color(102, 102, 102));
        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        Alquilar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Alquilar.setForeground(new java.awt.Color(255, 255, 255));
        Alquilar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Alquilar.setText("ALQUILAR");
        Alquilar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AlquilarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Alquilar, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Alquilar, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
        );

        jPanel3.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 20, 110, 40));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 500, 1280, 80));

        jtPrendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtPrendas);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 90, 640, 410));

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        jLabel2.setBackground(new java.awt.Color(153, 153, 153));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("COMPLETA LA INFORMACION");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 50));

        jPanel2.setBackground(new java.awt.Color(102, 153, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ELIGE AL EMPLEADO QUE TE ESTA HACIENDO EL ALQUILER");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 600, 40));

        jPanel4.setBackground(new java.awt.Color(255, 102, 102));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("COMFIRMA LAS PRENDAS A ALQUILAR");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 50, 640, 40));

        jtEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jtEmpleados.setSurrendersFocusOnKeystroke(true);
        jScrollPane2.setViewportView(jtEmpleados);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 600, 300));

        jPanel5.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 40, 40, 480));

        jPanel8.setBackground(new java.awt.Color(153, 153, 153));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("SELECCIONE LA FECHA DE ALQUILER");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("SELECCIONE LA FECHA DE DEVOLUCION");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(FechaAlquiler, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(44, 44, 44)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FechaDevolucion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 14, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(FechaDevolucion, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(FechaAlquiler, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 45, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, 610, 110));

        jLabel6.setText("jLabel6");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 90, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        home form = new home(this.id);
        form.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel4MouseClicked

    private void AlquilarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlquilarMouseClicked
      // Obtener c칠dula empleado igual que antes
        int filaSeleccionada = jtEmpleados.getSelectedRow();
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(rootPane, "Debes seleccionar un empleado.");
            return;
        }

        Object cedulaObj = jtEmpleados.getValueAt(filaSeleccionada, 2);
        if (cedulaObj == null) {
            JOptionPane.showMessageDialog(rootPane, "No se encontr칩 c칠dula en la fila seleccionada.");
            return;
        }
        String cedulaEmpleado = cedulaObj.toString();
        System.out.println("C칠dula del empleado seleccionado: " + cedulaEmpleado);

        // Obtener prendas seleccionadas igual que antes
        DefaultTableModel model = (DefaultTableModel) jtPrendas.getModel();
        List<Integer> idsPrendas = new ArrayList<>();
        for (int i = 0; i < model.getRowCount(); i++) {
            Boolean seleccionado = (Boolean) model.getValueAt(i, 0);
            if (Boolean.TRUE.equals(seleccionado)) {
                try {
                    Integer idPrenda = Integer.parseInt(model.getValueAt(i, 1).toString());
                    idsPrendas.add(idPrenda);
                } catch (NumberFormatException e) {
                    System.err.println("Error al convertir ID de prenda: " + e.getMessage());
                }
            }
        }

        if (idsPrendas.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No has seleccionado ninguna prenda.");
            return;
        }

        // Fechas
        Date fechaAlquiler = FechaAlquiler.getDate();
        if (fechaAlquiler == null) {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna fecha de alquiler.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // VALIDACI칍N 1: Verificar que la fecha de alquiler no sea anterior a la fecha actual
        Date fechaActual = new Date(); // Obtiene la fecha actual
        // Resetear la hora, minutos, segundos y milisegundos para comparar solo fechas
        Calendar cal1 = Calendar.getInstance();
        cal1.setTime(fechaActual);
        cal1.set(Calendar.HOUR_OF_DAY, 0);
        cal1.set(Calendar.MINUTE, 0);
        cal1.set(Calendar.SECOND, 0);
        cal1.set(Calendar.MILLISECOND, 0);
        fechaActual = cal1.getTime();
        
        Calendar cal2 = Calendar.getInstance();
        cal2.setTime(fechaAlquiler);
        cal2.set(Calendar.HOUR_OF_DAY, 0);
        cal2.set(Calendar.MINUTE, 0);
        cal2.set(Calendar.SECOND, 0);
        cal2.set(Calendar.MILLISECOND, 0);
        fechaAlquiler = cal2.getTime();
        
        if (fechaAlquiler.before(fechaActual)) {
            JOptionPane.showMessageDialog(null, "La fecha de alquiler no puede ser anterior a la fecha actual.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Date fechaDevolucion = FechaDevolucion.getDate();
        if (fechaDevolucion == null) {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna fecha de devoluci칩n.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Normalizar la fecha de devoluci칩n para comparaci칩n
        Calendar cal3 = Calendar.getInstance();
        cal3.setTime(fechaDevolucion);
        cal3.set(Calendar.HOUR_OF_DAY, 0);
        cal3.set(Calendar.MINUTE, 0);
        cal3.set(Calendar.SECOND, 0);
        cal3.set(Calendar.MILLISECOND, 0);
        fechaDevolucion = cal3.getTime();
        
        // VALIDACI칍N 2: Verificar que la fecha de devoluci칩n no sea anterior a la fecha de alquiler
        if (fechaDevolucion.before(fechaAlquiler)) {
            JOptionPane.showMessageDialog(null, "La fecha de devoluci칩n no puede ser anterior a la fecha de alquiler.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Crear DTO
        AlquilerDTO alquilerDTO = new AlquilerDTO(this.id, cedulaEmpleado, idsPrendas, fechaAlquiler, fechaDevolucion);

        // Enviar DTO al facade
        AlquilerServiceFacade alquilerFacade = new AlquilerServiceFacade();
        boolean idAlquiler = alquilerFacade.registrarAlquilerCompleto(alquilerDTO);

        if (idAlquiler) {
            
            home form = new home(this.id);
            form.setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Hubo un error al registrar el alquiler.");
        }

    }//GEN-LAST:event_AlquilarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Alquiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Alquiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Alquiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Alquiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Alquiler().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Alquilar;
    private com.toedter.calendar.JDateChooser FechaAlquiler;
    private com.toedter.calendar.JDateChooser FechaDevolucion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jtEmpleados;
    private javax.swing.JTable jtPrendas;
    // End of variables declaration//GEN-END:variables
}
